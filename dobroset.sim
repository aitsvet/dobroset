{
    "pages": [
        {
            "Name": "dobroset_charity_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "DBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantees).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_guarantees){SetTitle(#name#)}\r\nDBFind(Name: dobroset_users, Source: src_dobroset_users).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_users){SetTitle(#name#)}\r\nIf(#info# == 1) {\r\nDBFind(Name: dobroset_charity, Source: src_dobroset_charity).Where(\"id=#id#\")\r\n}.Else{\r\nDBFind(Name: dobroset_charity, Source: src_dobroset_charity).Order(\"id\")\r\n}\r\nDiv(Class: row df f-valign){\r\n        Div(Class: col-md-6){\r\n        Div(Class: list-group){\r\nForList(src_dobroset_charity) {\r\nDiv(Class: list-group-item){##id#. LinkPage(Body: #caption#, Page: dobroset_charity_list, PageParams: \"info=1,id=#id#\")}\r\nDiv(Class: list-group-item){LangRes(status):\r\nIf(#status# == 0){Span(Заявка создана)}\r\nIf(#status# == 1){Span(Заявка принята)}\r\nIf(#status# == 2){Span(Помощь предложена)}\r\nIf(#status# == 3){Span(Помощь принята)}\r\nIf(#status# == 4){Span(Помощь оказана)}\r\nIf(#status# == 5){Span(Принят отзыв благополучателя)}\r\nIf(#status# == 6){Span(Принят отзыв волонтёра)}\r\nIf(#status# == 7){Span(Принят отзыв НКО)}\r\n}\r\nDiv(Class: list-group-item){\r\nLangRes(beneficiary): DBFind(Name:dobroset_users, Source:mysrc).Columns(name).Where(\"account=#beneficiary# and active=1\").Limit(1) ForList(mysrc){Span(#name#)}\r\n}\r\nIf(And(#info# == 1, #guarantee# == 0)){\r\nDBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantee).Where(\"account=#key_id#\").Limit(1)\r\nForList(src_dobroset_guarantee) {\r\nButton(Body: LangRes(approve_charity), Class: btn btn-success, Page: dobroset_charity_list, Params: \"info=1,id=#id#,status=1\", Contract: dobroset_charity_approve)\r\n}\r\n}.Else{Div(Class: list-group-item){\r\nLangRes(guarantee): DBFind(Name:dobroset_guarantees, Source:mysrc).Columns(name).Where(\"account=#guarantee# and active=1\").Limit(1) ForList(mysrc){Span(#name#)}\r\n}\r\n}\r\nIf(And(#info# == 1, #guarantee# != 0, #principal# == 0)){\r\nDBFind(Name: dobroset_users, Source: src_dobroset_users).Where(\"account=#key_id#\").Limit(1)\r\nForList(src_dobroset_users) {\r\nButton(Body: LangRes(offer_help), Class: btn btn-success, Page: dobroset_charity_list, Params: \"info=1,id=#id#,status=2\", Contract: dobroset_charity_approve)\r\n}\r\n}.Else{Div(Class: list-group-item){\r\nLangRes(principal): DBFind(Name:dobroset_users, Source:mysrc).Columns(name).Where(\"account=#principal# and active=1\").Limit(1) ForList(mysrc){Span(#name#)}\r\n}\r\n}\r\nIf(And(#info# == 1, #status# == 2, #beneficiary# == #key_id#)){\r\nButton(Body: LangRes(approve_charity), Class: btn btn-success, Page: dobroset_charity_list, Params: \"info=1,id=#id#,status=3\", Contract: dobroset_charity_approve)\r\n}\r\nIf(And(#info# == 1, #status# == 3, #principal# == #key_id#)){\r\nButton(Body: LangRes(Оказать помощь), Class: btn btn-success, Page: dobroset_charity_list, Params: \"info=1,id=#id#,status=4\", Contract: dobroset_charity_approve)\r\n}\r\nIf(#bene_score# > 0) {\r\nDiv(Class: list-group-item){\r\n   Div(Class: pull-left) {Span(){ LangRes(bene_score):} } If(#bene_score#==1) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#bene_score#==2) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#bene_score#==3) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#bene_score#==4) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#bene_score#==5) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nDiv(Class: clearfix){}\r\n}\r\nIf(#info# == 1) {\r\nDiv(Class: list-group-item){Div(){ LangRes(bene_comment):}\r\nDiv() {#bene_comment#}\r\n}\r\n}\r\n}\r\nIf(#prin_score# > 0) {\r\nDiv(Class: list-group-item){\r\n   Div(Class: pull-left) {Span(){ LangRes(prin_score):} } If(#prin_score#==1) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#prin_score#==2) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#prin_score#==3) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#prin_score#==4) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#prin_score#==5) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nDiv(Class: clearfix){}\r\n}\r\nIf(#info# == 1) {\r\nDiv(Class: list-group-item){Div(){ LangRes(prin_comment):}\r\nDiv() {#prin_comment#}\r\n}\r\n}\r\n}\r\nIf(#guar_score# > 0) {\r\nDiv(Class: list-group-item){\r\n   Div(Class: pull-left) {Span(){ LangRes(guar_score):} } If(#guar_score#==1) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#guar_score#==2) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#guar_score#==3) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#guar_score#==4) {  Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nIf(#guar_score#==5) {   Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) } Div(Class: pull-left){ Em(Class: fa fa-1x fa-star ) }}\r\nDiv(Class: clearfix){}\r\n}\r\nIf(#info# == 1) {\r\nDiv(Class: list-group-item){Div(){ LangRes(guar_comment):}\r\nDiv() {#guar_comment#}\r\n}\r\n}\r\n}\r\nIf(And(#info# == 1, #status# == 4, #bene_score# == 0, #key_id# == #beneficiary#)){\r\nForm() {\r\n    Div(Class: list-group-item){\r\nLabel(For: score){Span(Body: LangRes(score))}\r\nInput(Name: score, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nLabel(For: comment){Span(Body: LangRes(comment))}\r\nInput(Name: comment, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nButton(Body: LangRes(charity_score), Class: btn btn-success, Page: dobroset_charity_list, PageParams: \"info=1,id=#id#\", Contract: dobroset_charity_score, Params: \"id=#id#\")\r\n}\r\n}\r\n}\r\nIf(And(#info# == 1, #status# == 5, #prin_score# == 0, #key_id# == #principal#)){\r\nForm() {\r\n    Div(Class: list-group-item){\r\nLabel(For: score){Span(Body: LangRes(score))}\r\nInput(Name: score, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nLabel(For: comment){Span(Body: LangRes(comment))}\r\nInput(Name: comment, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nButton(Body: LangRes(charity_score), Class: btn btn-success, Page: dobroset_charity_list, PageParams: \"info=1,id=#id#\", Contract: dobroset_charity_score, Params: \"id=#id#\")\r\n}\r\n}\r\n}\r\nIf(And(#info# == 1, #status# == 6, #guar_score# == 0, #key_id# == #guarantee#)){\r\nForm() {\r\n    Div(Class: list-group-item){\r\nLabel(For: score){Span(Body: LangRes(score))}\r\nInput(Name: score, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nLabel(For: comment){Span(Body: LangRes(comment))}\r\nInput(Name: comment, Class: form-control, Type: text).Style(border-radius: 10px 10px 10px 10px;)\r\nButton(Body: LangRes(charity_score), Class: btn btn-success, Page: dobroset_charity_list, PageParams: \"info=1,id=#id#\", Contract: dobroset_charity_score, Params: \"id=#id#\")\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}"
        },
        {
            "Name": "dobroset_charity_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "DBFind(Name: dobroset_users, Source: src_dobroset_users).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_users){Div(Class:h2){#name#}}\r\nForm() {\r\n\r\nLabel(For: charity_caption){\r\n    Span(Body: LangRes(charity_caption))\r\n}\r\nInput(Name: charity_caption, Class: form-control, Type: text)\r\n\r\nButton(Body: LangRes(create), Class: btn btn-primary, Page: dobroset_charity_list, Contract: dobroset_charity_create)\r\n\r\n}"
        },
        {
            "Name": "dobroset_user_approve",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "DBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantees).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_guarantees){Div(Class:h2){#name#}}\r\nDBFind(Name: dobroset_users, Source: src_dobroset_users).Custom(custom_id){\r\nSpan(#id#)}.Custom(custom_name){Span(#name#)}.Custom(custom_active){\r\nSpan(#active#)}.Custom(custom_account){Span(#account#)\r\n}.Custom(custom_guarantee){Span(#guarantee#)}.Custom(custom_date_created){\r\nSpan(#date_created#)}.Custom(custom_approve){\r\nIf(#active#){\r\nSpan(Em(Class: fa fa-check-circle))\r\nButton(Body: Em(Class: fa fa-ban), Class: btn btn-danger, Contract: dobroset_user_approve, Params: \"id=#id#,active=0\", Page: dobroset_user_approve)\r\n}.Else{\r\nSpan(Em(Class: fa fa-ban))\r\nButton(Body: Em(Class: fa fa-check-circle), Class: btn btn-success, Contract: dobroset_user_approve, Params: \"id=#id#,active=1\", Page: dobroset_user_approve)\r\n}\r\n}\r\nDiv(Class: list-group-item){\r\nTable(src_dobroset_users, \"$id$=custom_id,$name$=custom_name,$account$=custom_account,$guarantee$=custom_guarantee,$date_created$=custom_date_created,$active$=custom_approve\")\r\n}"
        },
        {
            "Name": "dobroset_user_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "SetTitle(Пользователь)\r\nDBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantees).Where(\"active=1\")\r\nForm() {\r\nLabel(For: user_name){\r\n    Span(Body: LangRes(user_name))\r\n}\r\nInput(Name: user_name, Class: form-control, Type: text)\r\n\r\nLabel(For: Guarantee){\r\n    Span(Body: LangRes(guarantee))\r\n}\r\nSelect(Name: Guarantee, Class: form-control, Source: src_dobroset_guarantees, NameColumn: name, ValueColumn: id)\r\nButton(Body: LangRes(create), Class: btn btn-primary, Contract: dobroset_user_create)\r\n}"
        },
        {
            "Name": "dobroset_guarantee_approve",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "If(#key_id# == EcosysParam(founder_account)) {\r\n    Div(Class:h2){Администратор}\r\n}\r\nDBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantees).Custom(custom_id){\r\nSpan(#id#)\r\n}.Custom(custom_name){\r\nSpan(#name#)\r\n}.Custom(custom_active){\r\nSpan(#active#)\r\n}.Custom(custom_account){\r\nSpan(#account#)\r\n}.Custom(custom_date_created){\r\nSpan(#date_created#)\r\n}.Custom(custom_approve){\r\nDiv(){\r\nIf(#active#){\r\nSpan(Em(Class: fa fa-check-circle))\r\nButton(Body: Em(Class: fa fa-ban), Class: btn btn-danger, Contract: dobroset_guarantee_approve, Params: \"id=#id#,active=0\", Page: dobroset_guarantee_approve)\r\n}.Else{\r\nSpan(Em(Class: fa fa-ban))\r\nButton(Body: Em(Class: fa fa-check-circle), Class: btn btn-success, Contract: dobroset_guarantee_approve, Params: \"id=#id#,active=1\", Page: dobroset_guarantee_approve)\r\n}\r\n}\r\n}.Order(\"id\")\r\nDiv(Class: list-group-item){\r\nTable(src_dobroset_guarantees, \"$id$=custom_id,$name$=custom_name,$account$=custom_account,$date_created$=custom_date_created,$active$=custom_approve\")\r\n}"
        },
        {
            "Name": "dobroset_guarantee_create",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "SetTitle(Организация)\r\nForm() {\r\n\r\nLabel(For: guarantee_name){\r\n    Span(Body: LangRes(guarantee_name))\r\n}\r\nInput(Name: guarantee_name, Class: form-control, Type: text)\r\n\r\nButton(Body: LangRes(create), Class: btn btn-primary, Page: dobroset_guarantee_create, Contract: dobroset_guarantee_create)\r\n\r\n}"
        },
        {
            "Name": "dobroset_menu",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "If(#key_id# == EcosysParam(founder_account)) {\r\n    SetTitle(Администратор)\r\n}\r\nDBFind(Name: dobroset_guarantees, Source: src_dobroset_guarantees).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_guarantees){SetTitle(#name#)}\r\nDBFind(Name: dobroset_users, Source: src_dobroset_users).Where(\"account=#key_id#\").Limit(1)\r\nForList(Source:src_dobroset_users){SetTitle(#name#)}\r\nDiv(Class: content-wrapper){\r\n    \r\n    LinkPage(Page: dobroset_guarantee_create){        \r\n        Div(media-box){\r\n            Div(Class: pull-left){\r\n                Em(Class: fa fa-2x fa-medkit text-primary)\r\n            } \r\n            Div(media-box-body clearfix){ \r\n                Div(Class: h5 text-bold, Body: $dobroset_guarantee_create$)\r\n            }\r\n        }\r\n    }\r\n\r\n    If(#key_id# == EcosysParam(founder_account)) {\r\n        LinkPage(Page: dobroset_guarantee_approve){        \r\n            Div(media-box){\r\n                Div(Class: pull-left){\r\n                    Em(Class: fa fa-2x fa-check-circle text-primary)\r\n                } \r\n                Div(media-box-body clearfix){ \r\n                    Div(Class: h5 text-bold, Body: $dobroset_guarantee_approve$)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    LinkPage(Page: dobroset_user_create){        \r\n        Div(media-box){\r\n            Div(Class: pull-left){\r\n                Em(Class: fa fa-2x fa-user-plus text-primary)\r\n            } \r\n            Div(media-box-body clearfix){ \r\n                Div(Class: h5 text-bold, Body: $dobroset_user_create$)\r\n            }\r\n        }\r\n    }\r\n\r\n    DBFind(Name: dobroset_guarantees, Source: mys).Where(\"account=#key_id#\").Limit(1)\r\n    ForList(Source: mys){ Div(){\r\n        LinkPage(Page: dobroset_user_approve){        \r\n            Div(media-box){\r\n                Div(Class: pull-left){\r\n                    Em(Class: fa fa-2x fa-address-card text-primary)\r\n                } \r\n                Div(media-box-body clearfix){ \r\n                    Div(Class: h5 text-bold, Body: $dobroset_user_approve$)\r\n                }\r\n            }\r\n        }\r\n        LinkPage(Page: dobroset_charity_list){        \r\n            Div(media-box){\r\n                Div(Class: pull-left){\r\n                    Em(Class: fa fa-2x fa-tasks text-primary)\r\n                } \r\n                Div(media-box-body clearfix){ \r\n                    Div(Class: h5 text-bold, Body: $dobroset_charity_list$)\r\n                }\r\n            }\r\n        }\r\n    }}\r\n\r\n    DBFind(Name: dobroset_users, Source: mys).Where(\"account=#key_id#\").Limit(1)\r\n    ForList(Source: mys){ Div(){\r\n        LinkPage(Page: dobroset_charity_create){        \r\n            Div(media-box){\r\n                Div(Class: pull-left){\r\n                    Em(Class: fa fa-2x fa-question-circle text-primary)\r\n                } \r\n                Div(media-box-body clearfix){ \r\n                    Div(Class: h5 text-bold, Body: $dobroset_charity_create$)\r\n                }\r\n            }\r\n        }\r\n        LinkPage(Page: dobroset_charity_list){        \r\n            Div(media-box){\r\n                Div(Class: pull-left){\r\n                    Em(Class: fa fa-2x fa-tasks text-primary)\r\n                } \r\n                Div(media-box-body clearfix){ \r\n                    Div(Class: h5 text-bold, Body: $dobroset_charity_list$)\r\n                }\r\n            }\r\n        }\r\n    }}\r\n}"
        },
        {
            "Name": "applications_list",
            "Conditions": "ContractAccess(\"@1EditPage\")",
            "Menu": "Applications",
            "Value": "Div(Class: content-wrapper){\n\n\tSetTitle($applications$)\n\n    Div(Class: row df f-valign){\n        Div(Class: col-md-3)\n        Div(Class: col-md-6){\n\n            Data(src_parameters,\"id,name\"){\n                1,$dobroset$\n                2,$referendum$\n                3,$land_records$\n            }.Custom(custom_link){\n                If(#id#==1){\n                    LinkPage(Page: dobroset_menu){        \n                        Div(media-box){\n                            Div(Class: pull-left){\n                                Em(Class: fa fa-2x fa-connectdevelop text-primary)\n                            } \n                            Div(media-box-body clearfix){ \n                                Div(Class: h5 text-bold, Body: #name#)\n                            }\n                        }\n                    }\n                }\n                If(#id#==2){\n                    LinkPage(Page: referendums_list){        \n                        Div(media-box){\n                            Div(Class: pull-left){\n                                Em(Class: fa fa-2x fa-gavel text-primary)\n                            } \n                            Div(media-box-body clearfix){ \n                                Div(Class: h5 text-bold, Body: #name#)\n                            }\n                        }\n                    }\n                }\n                If(#id#==3){\n                    LinkPage(Page: land_registry_records){        \n                        Div(media-box){\n                            Div(Class: pull-left){\n                                Em(Class: fa fa-2x icon-home text-primary)\n                            } \n                            Div(media-box-body clearfix){ \n                                Div(Class: h5 text-bold, Body: #name#)\n                            }\n                        }\n                    }\n                }\n            }.Custom(custom_value){\n                SysParam(#name#)\n            }.Custom(actions){\n                Span(Class: text-center text-bold, Body: \"Installed\")\n            }\n            \n            Table(src_parameters, \"=custom_link,=actions\")\n\n\t\t}\n\t\tDiv(Class: col-md-3)\n    }\n}"
        }
    ],
    "blocks": [],
    "menus": [
        {
            "Name": "Applications",
            "Conditions": "ContractAccess(\"@1EditMenu\")",
            "Value": "MenuItem(Title:$referendum$, Page:referendums_list, Icon:\"fa fa-gavel\")\nMenuItem(Title: $land_records$, Page: land_registry_records,Icon: \"fa icon-home\")\nMenuItem(Title:$dobroset$, Page:dobroset_menu, Icon:\"fa fa-connectdevelop\")"
        }
    ],
    "parameters": [],
    "languages": [
        {
            "Name": "comment",
            "Trans": "{\"en\":\"Комментарий\"}",
            "Conditions": ""
        },
        {
            "Name": "score",
            "Trans": "{\"en\":\"Оценка\"}",
            "Conditions": ""
        },
        {
            "Name": "offer_help",
            "Trans": "{\"en\":\"Предложить помощь\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_guarantee_create",
            "Trans": "{\"en\":\"Добавить НКО\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_guarantee_approve",
            "Trans": "{\"ru\":\"Реестр НКО\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_user_create",
            "Trans": "{\"en\":\"Добавить пользователя\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_user_approve",
            "Trans": "{\"en\":\"Реестр пользователей\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_charity_create",
            "Trans": "{\"en\":\"Попросить о помощи\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset_charity_list",
            "Trans": "{\"en\":\"Реестр добрых дел\"}",
            "Conditions": ""
        },
        {
            "Name": "dobroset",
            "Trans": "{\"en\":\"Добросеть\"}",
            "Conditions": ""
        },
        {
            "Name": "guarantee_name",
            "Trans": "{\"en\":\"Название организации\"}",
            "Conditions": ""
        },
        {
            "Name": "account",
            "Trans": "{\"en\":\"Аккаунт\"}",
            "Conditions": ""
        },
        {
            "Name": "active",
            "Trans": "{\"en\":\"Активна\"}",
            "Conditions": ""
        },
        {
            "Name": "date_created",
            "Trans": "{\"en\":\"Дата создания\"}",
            "Conditions": ""
        },
        {
            "Name": "user_name",
            "Trans": "{\"en\":\"Имя пользователя\"}",
            "Conditions": ""
        },
        {
            "Name": "guarantee",
            "Trans": "{\"en\":\"Организация-куратор\"}",
            "Conditions": ""
        },
        {
            "Name": "charity_caption",
            "Trans": "{\"en\":\"Запрос о помощи\"}",
            "Conditions": ""
        },
        {
            "Name": "approve_charity",
            "Trans": "{\"en\":\"Подтвердить запрос\"}",
            "Conditions": ""
        },
        {
            "Name": "charity_score",
            "Trans": "{\"en\":\"Отправить отзыв\"}",
            "Conditions": ""
        },
        {
            "Name": "bene_score",
            "Trans": "{\"en\":\"Оценка благополучателя\"}",
            "Conditions": ""
        },
        {
            "Name": "prin_score",
            "Trans": "{\"en\":\"Оценка волонтёра\"}",
            "Conditions": ""
        },
        {
            "Name": "guar_score",
            "Trans": "{\"en\":\"Оценка НКО\"}",
            "Conditions": ""
        },
        {
            "Name": "principal",
            "Trans": "{\"en\":\"Волонтёр\"}",
            "Conditions": ""
        },
        {
            "Name": "beneficiary",
            "Trans": "{\"en\":\"Благополучатель\"}",
            "Conditions": ""
        },
        {
            "Name": "status",
            "Trans": "{\"en\":\"Статус дела\"}",
            "Conditions": ""
        },
        {
            "Name": "bene_comment",
            "Trans": "{\"en\":\"Комментарий благополучателя\"}",
            "Conditions": ""
        },
        {
            "Name": "prin_comment",
            "Trans": "{\"en\":\"Комментарий волонтёра\"}",
            "Conditions": ""
        },
        {
            "Name": "guar_comment",
            "Trans": "{\"en\":\"Комментарий НКО\"}",
            "Conditions": ""
        },
        {
            "Name": "yes",
            "Trans": "{\"en\":\"Yes\",\"ru\":\"Да\"}",
            "Conditions": ""
        },
        {
            "Name": "want_save",
            "Trans": "{\"en\":\"Do you want to save changes?\",\"ru\":\"Действительно хотите сохранить\"}",
            "Conditions": ""
        },
        {
            "Name": "votes_taken_reject",
            "Trans": "{\"ru\":\"Отрицательных голосов\",\"en\":\"Negative votes\"}",
            "Conditions": ""
        },
        {
            "Name": "votes_taken_accept",
            "Trans": "{\"ru\":\"Положительных голосов\",\"en\":\"Positive votes\"}",
            "Conditions": ""
        },
        {
            "Name": "view_all",
            "Trans": "{\"en\": \"View all\", \"ru\": \"Посмотреть все\"}",
            "Conditions": ""
        },
        {
            "Name": "username",
            "Trans": "{\"en\": \"Username\", \"ru\": \"Никнейм\"}",
            "Conditions": ""
        },
        {
            "Name": "user_info",
            "Trans": "{\"en\": \"User information\", \"ru\": \"Информация о пользователе\"}",
            "Conditions": ""
        },
        {
            "Name": "undefined",
            "Trans": "{\"en\":\"Undefined\",\"ru\":\"Не определено\"}",
            "Conditions": ""
        },
        {
            "Name": "total_votes",
            "Trans": "{\"en\":\"Total votes\",\"ru\":\"Всего проголосовало\"}",
            "Conditions": ""
        },
        {
            "Name": "send_request",
            "Trans": "{\"en\":\"Send request\",\"ru\":\"Послать запрос\"}",
            "Conditions": ""
        },
        {
            "Name": "send_page",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Отправить на страницу\"}",
            "Conditions": ""
        },
        {
            "Name": "send_notify",
            "Trans": "{\"en\":\"Send Notification\",\"ru\":\"Отправить оповещение\"}",
            "Conditions": ""
        },
        {
            "Name": "send_contract",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Отправить в контракт\"}",
            "Conditions": ""
        },
        {
            "Name": "save",
            "Trans": "{\"en\": \"Save\", \"ru\": \"Сохранить\"}",
            "Conditions": ""
        },
        {
            "Name": "result",
            "Trans": "{\"en\":\"Result\",\"ru\":\"Результат\"}",
            "Conditions": ""
        },
        {
            "Name": "registration_date",
            "Trans": "{\"en\":\"Registration Date\",\"ru\":\"Дата регистрации\"}",
            "Conditions": ""
        },
        {
            "Name": "referendum",
            "Trans": "{\"en\":\"Referendum\",\"ru\":\"Референдум\"}",
            "Conditions": ""
        },
        {
            "Name": "record_add_date",
            "Trans": "{\"en\":\"Record Add Date\",\"ru\":\"Дата добавления записи\"}",
            "Conditions": ""
        },
        {
            "Name": "profile_edit",
            "Trans": "{\n    \"en\": \"Profile edit\",\n    \"ru\": \"Редактирование профиля\"\n}",
            "Conditions": ""
        },
        {
            "Name": "problem",
            "Trans": "{\"en\":\"Have Issues\",\"ru\":\"Проблемы\"}",
            "Conditions": ""
        },
        {
            "Name": "price",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}",
            "Conditions": ""
        },
        {
            "Name": "owner",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}",
            "Conditions": ""
        },
        {
            "Name": "notifications",
            "Trans": "{\"en\": \"Notifications\", \"ru\": \"Уведомления\"}",
            "Conditions": ""
        },
        {
            "Name": "no_problem",
            "Trans": "{\"en\":\"No Issues\",\"ru\":\"Нет проблем\"}",
            "Conditions": ""
        },
        {
            "Name": "no",
            "Trans": "{\"en\":\"No\",\"ru\":\"Нет\"}",
            "Conditions": ""
        },
        {
            "Name": "new_voting",
            "Trans": "{\"en\": \"New voting\", \"ru\": \"Новое голосование\"}",
            "Conditions": ""
        },
        {
            "Name": "new_land",
            "Trans": "{\"en\":\"New land\",\"ru\":\"Новая земля\"}",
            "Conditions": ""
        },
        {
            "Name": "need_your_processing",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}",
            "Conditions": ""
        },
        {
            "Name": "name",
            "Trans": "{\"en\": \"Name\", \"ru\": \"Название\"}",
            "Conditions": ""
        },
        {
            "Name": "member_id",
            "Trans": "{\"en\": \"Member ID\", \"ru\": \"ID члена\"}",
            "Conditions": ""
        },
        {
            "Name": "legal_status",
            "Trans": "{\"en\":\"Legal status\",\"ru\":\"Правовой статус\"}",
            "Conditions": ""
        },
        {
            "Name": "land_use",
            "Trans": "{\"en\":\"Land use\",\"ru\":\"Землепользование\"}",
            "Conditions": ""
        },
        {
            "Name": "land_records_edit",
            "Trans": "{\"en\":\"Land record edit\",\"ru\":\"Редактирование земельной записи\"}",
            "Conditions": ""
        },
        {
            "Name": "land_records_add",
            "Trans": "{\"en\":\"Land Record adding\",\"ru\":\"Добавление земельной записи\"}",
            "Conditions": ""
        },
        {
            "Name": "land_records",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}",
            "Conditions": ""
        },
        {
            "Name": "land_record",
            "Trans": "{\"en\":\"Land record\",\"ru\":\"Земельная запись\"}",
            "Conditions": ""
        },
        {
            "Name": "land_nature",
            "Trans": "{\"en\":\"Nature\",\"ru\":\"Тип\"}",
            "Conditions": ""
        },
        {
            "Name": "input",
            "Trans": "{\"en\":\"Input\",\"ru\":\"Ввод\"}",
            "Conditions": ""
        },
        {
            "Name": "id",
            "Trans": "{\"en\": \"ID\", \"ru\": \"ID\"}",
            "Conditions": ""
        },
        {
            "Name": "encumbrance_certificate",
            "Trans": "{\"en\":\"Encumbrance certificate\",\"ru\":\"Сертификат обременения\"}",
            "Conditions": ""
        },
        {
            "Name": "editing_profile",
            "Trans": "{\"en\": \"Editing profile\", \"ru\": \"Редактирование профиля\"}",
            "Conditions": ""
        },
        {
            "Name": "edit_page",
            "Trans": "{\"en\":\"Edit page\",\"ru\":\"Редактировать страницу\"}",
            "Conditions": ""
        },
        {
            "Name": "edit_contract",
            "Trans": "{\"en\":\"Edit contract\",\"ru\":\"Редактировать контракт\"}",
            "Conditions": ""
        },
        {
            "Name": "description",
            "Trans": "{\"en\": \"Description\", \"ru\": \"Описание\"}",
            "Conditions": ""
        },
        {
            "Name": "department_of_land_resources",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Отдел земельных ресурсов\"}",
            "Conditions": ""
        },
        {
            "Name": "depart_role3",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}",
            "Conditions": ""
        },
        {
            "Name": "depart_role2",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}",
            "Conditions": ""
        },
        {
            "Name": "depart_role1",
            "Trans": "{\"en\":\"Department of Land Resources\",\"ru\":\"Департамент земельных ресурсов\"}",
            "Conditions": ""
        },
        {
            "Name": "demo_title",
            "Trans": "{\"en\":\"Demonstration\",\"ru\":\"Демонстрация\"}",
            "Conditions": ""
        },
        {
            "Name": "demo_sendPage",
            "Trans": "{\"en\":\"Send to page\",\"ru\":\"Передача на страницу\"}",
            "Conditions": ""
        },
        {
            "Name": "demo_sendMessage",
            "Trans": "{\"en\":\"Send a text parameter to a notification\",\"ru\":\"Передача текстового параметра в оповещении\"}",
            "Conditions": ""
        },
        {
            "Name": "demo_sendContract",
            "Trans": "{\"en\":\"Send to contract\",\"ru\":\"Передача в контракт\"}",
            "Conditions": ""
        },
        {
            "Name": "create",
            "Trans": "{\"en\": \"Create\", \"ru\": \"Создать\"}",
            "Conditions": ""
        },
        {
            "Name": "consideration_value",
            "Trans": "{\"en\":\"Consideration value\",\"ru\":\"Справедливая стоимость\"}",
            "Conditions": ""
        },
        {
            "Name": "confirm",
            "Trans": "{\"en\":\"Confirm\",\"ru\":\"Подтвердить\"}",
            "Conditions": ""
        },
        {
            "Name": "code",
            "Trans": "{\"en\":\"Code\",\"ru\":\"Код\"}",
            "Conditions": ""
        },
        {
            "Name": "close",
            "Trans": "{\"en\": \"Close\", \"ru\": \"Закрыть\"}",
            "Conditions": ""
        },
        {
            "Name": "change",
            "Trans": "{\"en\": \"Change\", \"ru\": \"Изменить\"}",
            "Conditions": ""
        },
        {
            "Name": "cancel",
            "Trans": "{\"en\":\"Cancel\",\"ru\":\"Отмена\"}",
            "Conditions": ""
        },
        {
            "Name": "buildings_use_class",
            "Trans": "{\"en\":\"Buildings use class\",\"ru\":\"Класс используемых зданий\"}",
            "Conditions": ""
        },
        {
            "Name": "back",
            "Trans": "{\"en\": \"Back\", \"ru\": \"Назад\"}",
            "Conditions": ""
        },
        {
            "Name": "avatar",
            "Trans": "{\"en\": \"Avatar\", \"ru\": \"Фото\"}",
            "Conditions": ""
        },
        {
            "Name": "attention",
            "Trans": "{\"en\": \"ATTENTION! The page has not received parameters and is unavailable for viewing.\", \"ru\": \"ВНИМАНИЕ! Страница не получила параметров и не доступна для просмотра.\"}",
            "Conditions": ""
        },
        {
            "Name": "ask_request_second",
            "Trans": "{\"en\":\"Do you want to send a second request?\",\"ru\":\"Вы хотите отправить повторный запрос?\"}",
            "Conditions": ""
        },
        {
            "Name": "area_size",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер\"}",
            "Conditions": ""
        },
        {
            "Name": "applications",
            "Trans": "{\"en\":\"Applications\",\"ru\":\"Приложения\"}",
            "Conditions": ""
        },
        {
            "Name": "address",
            "Trans": "{\"en\":\"Address\",\"ru\":\"Адрес\"}",
            "Conditions": ""
        },
        {
            "Name": "add_role",
            "Trans": "{\"en\": \"Add role\", \"ru\": \"Добавить роль\"}",
            "Conditions": ""
        },
        {
            "Name": "add_new_record",
            "Trans": "{\"en\":\"Add new record\",\"ru\":\"Добавить новую запись\"}",
            "Conditions": ""
        },
        {
            "Name": "add",
            "Trans": "{\"en\": \"Add\", \"ru\": \"Добавить\"}",
            "Conditions": ""
        }
    ],
    "contracts": [
        {
            "Name": "dobroset_guarantee_create",
            "Value": "contract dobroset_guarantee_create {\n    data {\n        guarantee_name string\n    }\n\n    conditions {\n        if false { // Size($guarantee_name) == 0 {\n            error \"Пустое название организации.\"\n        }\n    }\n\n    action {\n        var founder int\n        founder = AddressToId(EcosysParam(\"founder_account\"))\n        DBInsert(\"dobroset_guarantees\", \"account,name,active,timestamp date_created\", $key_id, $guarantee_name, 0, $time)\n        Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", founder, \"fa-medkit\", \"Добавлена НКО\", \"Подтвердите добавленную НКО\", \"dobroset_guarantee_approve\", \"\")\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_user_create",
            "Value": "contract dobroset_user_create {\n    data {\n        user_name string\n        Guarantee int\n    }\n    conditions {\n    }\n    action {\n        DBInsert(\"dobroset_users\", \"account,name,active,timestamp date_created,guarantee\", $key_id, $user_name, 0, $time, $Guarantee)\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_guarantee_approve",
            "Value": "contract dobroset_guarantee_approve {\n    data {\n     active int,\n     id int\n    }\n\n    conditions {\n\n    }\n\n    action {\n        /*var guarantee map\n        var guarantee_address address\n        var guarantee_id int\n        guarantee = DBFind(\"dobroset_guarantees\").Columns(\"account\").WhereId($id).Row()\n        guarantee_address = Int(guarantee[\"account\"])\n        guarantee_id = AddressToId(guarantee_address)*/\n        DBUpdate(\"dobroset_guarantees\", $id, \"active\",$active)\n        /*Notifications_Single_Send(\"member_id,icon_name,text_header,text_body,page_name,params_val\", guarantee_id, \"fa-check-circle\", \"Добавлена НКО\", \"Ваша НКО заявка подтверждена\", \"dobroset_guarantee_list\", \"\")*/\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_user_approve",
            "Value": "contract dobroset_user_approve {\n    data {\n     active int,\n     id int\n    }\n\n    conditions {\n\n    }\n\n    action {\nDBUpdate(\"dobroset_users\", $id, \"active\",$active);\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_charity_create",
            "Value": "contract dobroset_charity_create {\n    data {\n        charity_caption string\n    }\n\n    conditions {\n\n    }\n\n    action {\n        DBInsert(\"dobroset_charity\", \"beneficiary,caption,status\", $key_id, $charity_caption, 0) \n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_charity_approve",
            "Value": "contract dobroset_charity_approve {\n    data {\n        id int\n        status int\n    }\n\n    conditions {\n\n    }\n\n    action {\n        DBUpdate(\"dobroset_charity\", $id, \"status\", $status)\n        if $status == 1 {\n            DBUpdate(\"dobroset_charity\", $id, \"guarantee\", $key_id)\n        }\n        if $status == 2 {\n            DBUpdate(\"dobroset_charity\", $id, \"principal\", $key_id)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        },
        {
            "Name": "dobroset_charity_score",
            "Value": "contract dobroset_charity_score {\n    data {\n        id int\n        score int\n        comment string\n    }\n\n    conditions {\n    }\n\n    action {\n        var ret map\n        ret = DBFind(\"dobroset_charity\").Columns(\"principal,beneficiary,guarantee\").Where(\"id=?\", $id).Row()\n        if $key_id == Int(ret[\"principal\"]) {\n            DBUpdate(\"dobroset_charity\", $id, \"prin_score,prin_comment,status\", $score, $comment, 6)\n        }\n        if $key_id == Int(ret[\"beneficiary\"]) {\n            DBUpdate(\"dobroset_charity\", $id, \"bene_score,bene_comment,status\", $score, $comment, 5)\n        }\n        if $key_id == Int(ret[\"guarantee\"]) {\n            DBUpdate(\"dobroset_charity\", $id, \"guar_score,guar_comment,status\", $score, $comment, 7)\n        }\n    }\n}",
            "Conditions": "ContractConditions(\"MainCondition\")"
        }
    ],
    "tables": [
        {
            "Name": "dobroset_charity",
            "Columns": "[{\"name\":\"guar_score\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"prin_score\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"beneficiary\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"bene_comment\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"guar_comment\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"status\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"caption\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"guarantee\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"principal\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"bene_score\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"prin_comment\",\"type\":\"text\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"dobroset_charity_create\\\")\",\"update\":\"ContractConditions(\\\"dobroset_charity_approve\\\", \\\"dobroset_charity_score\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "dobroset_guarantees",
            "Columns": "[{\"name\":\"account\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_created\",\"type\":\"datetime\",\"conditions\":\"true\"},{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"active\",\"type\":\"number\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"dobroset_guarantee_create\\\")\",\"update\":\"ContractConditions(\\\"dobroset_guarantee_approve\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        },
        {
            "Name": "dobroset_users",
            "Columns": "[{\"name\":\"name\",\"type\":\"text\",\"conditions\":\"true\"},{\"name\":\"active\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"account\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"guarantee\",\"type\":\"number\",\"conditions\":\"true\"},{\"name\":\"date_created\",\"type\":\"datetime\",\"conditions\":\"true\"}]",
            "Permissions": "{\"insert\":\"ContractConditions(\\\"dobroset_user_create\\\")\",\"update\":\"ContractConditions(\\\"dobroset_user_approve\\\")\",\"new_column\":\"ContractConditions(\\\"MainCondition\\\")\"}"
        }
    ],
    "data": []
}
